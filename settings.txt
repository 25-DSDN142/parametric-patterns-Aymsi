You will need to fill out this file for hand in. 

The bellow is just an example, feel free to disregard this documents contents.


Your final settings.txt will look something like this when you are finished:

/////////////////////////////////

Wallpaper 1:

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
let leftpoint = centrex - 20
let rightpoint = centrex + 20
let outsidestarpointlength = 20
//Perameter change for this - connect to edge added to extend star points to edge of box
let connecttoedge = 0

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 50

//custom stroke weight variables + used for if statements
let standardstroke = 2

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 67
//let backgroundcolour = color(3, 33, 54); 

//Stroke colours Line: 105, 106
//let basestrokec = color(199, 236, 255); //base blue strokes
//let thickstrokec = color(255); //white thick strokes

//fill colours Line: 107
//let backlayerfill = color(255, 218, 97); //bright yellow
//let secondlayerfill = color(255, 218, 97); //bright yellow
//let thirdlayerfill = color(255, 244, 191); //light yellow
//let fourthlayerfill = color(181, 227, 255); //light blue
//let fifthlayerfill = color(255, 218, 97); //bright yellow
//let sixthlayerfill = color(255, 244, 191); //light yellow
//let frontlayerfill = color(255, 244, 191); //light yellow

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 80 - downwards

  // //Setting local functions so they draw according to their own measurements
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // // variables for drawing shape reference
  // let leftpoint = centrex - 20;
  // let rightpoint = centrex + 20;
  // let outsidestarpointlength = 20;
  // let connecttoedge = 70;

//single DrawStar functions being put under the my_symbol function
//Line: 79
//  DrawStar(100,100);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_PORTRAIT); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 100;
}

/////////////////////////////////

Wallpaper 2:

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
let leftpoint = centrex - 20
let rightpoint = centrex + 20
let outsidestarpointlength = 20
//Perameter change for this - connect to edge added to extend star points to edge of box
let connecttoedge = 20

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 90

//custom stroke weight variables + used for if statements
let standardstroke = 2

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 75
// let backgroundcolour = color(125, 2, 64); //deep darker pink

//stroke colours Line: 111
  // let basestrokec = color(255, 191, 222); //light pink
  // let thickstrokec = color(250); //white
//fill colours Line: 114
// let backlayerfill = color(255, 191, 222); //light pink
// let secondlayerfill = color(255, 79, 164); //bright pink
// let thirdlayerfill = color(255); //white
// let fourthlayerfill = color(255, 79, 164); //bright pink
// let fifthlayerfill = color(255, 79, 164); //bright pink
// let sixthlayerfill = color(255, 191, 222); //light pink
// let frontlayerfill = color(255); //white

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 80 - downwards

  // //Setting local functions so they draw according to their own measurements
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // // variables for drawing shape reference
  // let leftpoint = centrex - 20;
  // let rightpoint = centrex + 20;
  // let outsidestarpointlength = 20;
  // let connecttoedge = 20;

//single DrawStar functions being put under the my_symbol function
// Line: 79
//  DrawStar(100,100);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_PORTRAIT); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 0;
}

/////////////////////////////////

Wallpaper 3:

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
let leftpoint = centrex - 20
let rightpoint = centrex + 20
let outsidestarpointlength = 20
//Perameter change for this - connect to edge added to extend star points to edge of box
let connecttoedge = 0

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 55

//custom stroke weight variables + used for if statements
let standardstroke = 2

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 77
// let backgroundcolour = color(0);  //black

//stroke colours Line: 115
  // let basestrokec = color(255); //white
  // let thickstrokec = color(250, 243, 182); //light yellow
//fill colours Line: 118
// let backlayerfill = color(214, 164, 26); //dark yellow/GOLD
// let secondlayerfill = color(247, 222, 94); //lighter yellow
// let thirdlayerfill = color(255); //white
// let fourthlayerfill = color(214, 164, 26); //dark yellow/GOLD
// let fifthlayerfill = color(214, 164, 26); //dark yellow/GOLD
// let sixthlayerfill = color(247, 222, 94); //lighter yellow
// let frontlayerfill = color(255); //white

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 80 - downwards

  // //Setting local functions so they draw according to their own measurements
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // // variables for drawing shape reference
  // let leftpoint = centrex - 20;
  // let rightpoint = centrex + 20;
  // let outsidestarpointlength = 20;
  // let connecttoedge = 0;

//Multiple DrawStar functions being put under the my_symbol function
// Line: 82
  DrawStar(100, 100);
  DrawStar(200, 200);
  DrawStar(0, 0);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_LANDSCAPE); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 0;
}

/////////////////////////////////

Wallpaper 4:

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
let leftpoint = centrex - 20
let rightpoint = centrex + 20
let outsidestarpointlength = 20
//Perameter change for this - connect to edge added to extend star points to edge of box
let connecttoedge = 80

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 100

//custom stroke weight variables + used for if statements
let standardstroke = 2

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 78
  // let backgroundcolour = color(28, 0, 51); //dark black toned purple

//stroke colours Line: 117
  // let basestrokec = color(135, 120, 255); //blue toned purple
  // let thickstrokec = color(255); //white 
//fill colours Line: 120
// let backlayerfill = color(255); //white
// let secondlayerfill = color(0); //black 
// let thirdlayerfill = color(255); //white
// let fourthlayerfill = color(135, 120, 255); //blue toned purple
// let fifthlayerfill = color(0); //bright pink
// let sixthlayerfill = color(226, 191, 255); //lighter pink toned purple
// let frontlayerfill = color(255); //white

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 80 - downwards

  // //Setting local functions so they draw according to their own measurements
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // // variables for drawing shape reference
  // let leftpoint = centrex - 20;
  // let rightpoint = centrex + 20;
  // let outsidestarpointlength = 20;
  // let connecttoedge = 80;

//Multiple DrawStar functions being put under the my_symbol function
// Line: 82
  // DrawStar(50, 50);
  // DrawStar(150, 150);
  // DrawStar(150, 50);
  // DrawStar(50, 150);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_LANDSCAPE); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 0;
}

/////////////////////////////////

Wallpaper 5: idea is to look like a vine with flowers

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
let leftpoint = centrex - 20
let rightpoint = centrex + 20
let outsidestarpointlength = 20
//Perameter change for this - connect to edge added to extend star points to edge of box
let connecttoedge = 0

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 100

//custom stroke weight variables + used for if statements
let standardstroke = 4

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 82
// let backgroundcolour = color(218, 242, 220); //super light green

//stroke colours Line: 125
  // let basestrokec = color(37, 69, 32); //dark green
  // let thickstrokec = color(25, 43, 22); //darker green
//fill colours Line: 128
// let backlayerfill = color(145, 186, 138); //light sage green
// let secondlayerfill = color(145, 186, 138); //light sage green
// let thirdlayerfill = color(145, 186, 138); //light sage green
// let fourthlayerfill = color(105, 4, 38); //deep red
// let fifthlayerfill = color(255); //white
// let sixthlayerfill = color(201, 20, 84); //bright pink/red
// let frontlayerfill = color(255, 193, 94); //yellow

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 102 - downwards

  // //Setting local functions so they draw according to their own measurements
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // // variables for drawing shape reference
  // let leftpoint = centrex - 20;
  // let rightpoint = centrex + 20;
  // let outsidestarpointlength = 20;
  // let connecttoedge = 0;

//Multiple DrawStar functions being put under the my_symbol function
// Line: 88
//  //top left star
//   DrawStar(0, 0);
//   //top right star
//   DrawStar(200, 0);
//   //bottom right star
//   DrawStar(200, 200);
//   //bottom left star
//   DrawStar(0, 200);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_LANDSCAPE); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 100;
}

/////////////////////////////////

Wallpaper 6:

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
let leftpoint = centrex - 20
let rightpoint = centrex + 20
let outsidestarpointlength = 20
//Perameter change for this - connect to edge added to extend star points to edge of box
let connecttoedge = 10

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 50

//custom stroke weight variables + used for if statements
let standardstroke = 1

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 76
  // let backgroundcolour = color(14, 70, 92); //dark navy blue

//stroke colours Line: 111
  // let basestrokec = color(255, 223, 148); //brighter yellow
  // let thickstrokec = color(255, 233, 181); //light yellow
//fill colours Line: 115
// let backlayerfill = color(255); //white
// let secondlayerfill = color(21, 70, 110); //darker blue
// let thirdlayerfill = color(128, 197, 255); //light blue
// let fourthlayerfill = color(150, 220, 255); //light blue
// let fifthlayerfill = color(14, 70, 92); //dark blue
// let sixthlayerfill = color(222, 246, 255); //very light blue
// let frontlayerfill = color(255); //white

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 87 - downwards

  // //Setting local functions so they draw according to their own measurements
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // // variables for drawing shape reference
  // let leftpoint = centrex - 20;
  // let rightpoint = centrex + 20;
  // let outsidestarpointlength = 20;
  // let connecttoedge = 10;

//Multiple DrawStar functions being put under the my_symbol function
// Line: 82
  // DrawStar(100, 150);
  // DrawStar(100, 50);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_PORTRAIT); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 0;
}

/////////////////////////////////

Wallpaper 7:

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
let leftpoint = centrex - 35
let rightpoint = centrex + 35
let outsidestarpointlength = 30
//Perameter change for this - connect to edge added to extend star points to edge of box
let connecttoedge = 30

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 35

//custom stroke weight variables + used for if statements
let standardstroke = 2

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 84
  // let backgroundcolour = color(0); //black

//stroke colours Line: 128
  // let basestrokec = color(255, 212, 240); //light pink
  // let thickstrokec = color(214, 255, 220); //light green
//fill colours Line: 132
// let backlayerfill = color(115, 156, 121); //light green
// let secondlayerfill = color(255, 128, 195); //vibrant pink
// let thirdlayerfill = color(227, 34, 136); //darker vibrant pink
// let fourthlayerfill = color(110, 3, 60); //deep dark pink
// let fifthlayerfill = color(110, 3, 60); //deep dark pink
// let sixthlayerfill = color(227, 34, 136); //darker vibrant pink
// let frontlayerfill = color(255, 128, 195); //vibrant pink

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 104 - downwards

  // //Setting local functions so they draw according to their own measurements 
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // variables for drawing shape reference
  // let leftpoint = centrex - 35;
  // let rightpoint = centrex + 35;
  // let outsidestarpointlength = 30;
  // let connecttoedge = 30;

//Multiple DrawStar functions being put under the my_symbol function
// Line: 90
  // //middle star
  // DrawStar(100, 100);
  // //top right star
  // DrawStar(150, 50);
  // //bottom right star
  // DrawStar(150, 150);
  // //bottom left star
  // DrawStar(50, 150);
  // //top left star
  // DrawStar(50, 50);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_PORTRAIT); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 0;
}

/////////////////////////////////

Wallpaper 8:

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
  let leftpoint = centrex - 20;
  let rightpoint = centrex + 20;
  let outsidestarpointlength = 18;
//Perameter change for this - connect to edge added to extend star points to edge of box
 let connecttoedge = 75;

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 65

//custom stroke weight variables + used for if statements
let standardstroke = 2

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 78
  // let backgroundcolour = color(0, 37, 66); //dark navy blue 

//stroke colours Line: 117
  // let basestrokec = color(255, 233, 171); //light yellow
  // let thickstrokec = color(255); //white
//fill colours Line: 120
// let backlayerfill = color(255, 199, 59); //vibrant yellow
// let secondlayerfill = color(255, 170, 51); //orange
// let thirdlayerfill = color(225); //white
// let fourthlayerfill = color(255, 238, 150); //light yellow
// let fifthlayerfill = color(255, 199, 59); //vibrant yellow
// let sixthlayerfill = color(255, 249, 207); //very light yellow
// let frontlayerfill = color(255); //white

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 92 - downwards

  // //Setting local functions so they draw according to their own measurements 
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // variables for drawing shape reference
  // let leftpoint = centrex - 20;
  // let rightpoint = centrex + 20;
  // let outsidestarpointlength = 18;
  // let connecttoedge = 75;

//Multiple DrawStar functions being put under the my_symbol function
// Line: 82
  // DrawStar(50, 50);
  // DrawStar(75, 75);
  // DrawStar(150, 150);
  // DrawStar(125, 125);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_LANDSCAPE); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 100;
}

/////////////////////////////////

Wallpaper 9:

//your parameter variables go here!

//adding centre point variables to change my code - wanted a centre reference point
//why? Clarity of reading code, easier editing later for perameterising code for different wallpaper layouts,
//plus also for implementing an if statement for adding multiple stars later
let centrex = 100
let centrey = 100

//DrawBackStarLayer Variables
  let leftpoint = centrex - 20;
  let rightpoint = centrex + 20;
  let outsidestarpointlength = 50;
//Perameter change for this - connect to edge added to extend star points to edge of box
 let connecttoedge = 0;

//DrawSecondStarLayer + DrawFifthStarLayer Variables
let squarewidth = 70

//DrawFourthStarLayer + DrawSixthStarLayer Variables
let trianglelength = 70

//custom stroke weight variables + used for if statements
let standardstroke = 2

//colour variables 
//each colour variable had to be put under each layer triangle function to work properly

//background colour Line: 78
  // let backgroundcolour = color(255, 214, 234); //light pink 

//stroke colours Line: 117
  // let basestrokec = color(0, 43, 77); //dark blue
  // let thickstrokec = color(255); //white
//fill colours Line: 120
// let backlayerfill = color(0, 43, 77); //dark blue
// let secondlayerfill = color(48, 123, 179); //blue
// let thirdlayerfill = color(225); //white
// let fourthlayerfill = color(161, 216, 255); //light blue
// let fifthlayerfill = color(0, 43, 77); //dark blue
// let sixthlayerfill = color(48, 123, 179); //blue
// let frontlayerfill = color(255); //white

//Functions specifically under DrawStar (so that they work - parameters passing through DrawStar function)
//scaleFactor under DrawStar Line: 92 - downwards

  // //Setting local functions so they draw according to their own measurements 
  // let centrex = middlestarX;
  // let centrey = middlestarY;

  // variables for drawing shape reference
  // let leftpoint = centrex - 20;
  // let rightpoint = centrex + 20;
  // let outsidestarpointlength = 50;
  // let connecttoedge = 0;

//Multiple DrawStar functions being put under the my_symbol function
// Line: 82
// DrawStar(100, 50);
// DrawStar(100, 150);
// DrawStar(27, 100);
// DrawStar(175, 100);

function setup_wallpaper(pWallpaper) {
  pWallpaper.output_mode(GRID_WALLPAPER);
  //pWallpaper.output_mode(GRID_WALLPAPER) - change back to DEVELOP_GLYPH to edit just design
  
  pWallpaper.resolution(NINE_LANDSCAPE); //FIT_TO_SCREEN //NINE_PORTRAIT makes it portrait repeated 9x //can also do NINE_LANDSCAPE
  pWallpaper.show_guide(false); //set this to false when you're ready to print

  //Grid settings
  pWallpaper.grid_settings.cell_width  = 200;
  pWallpaper.grid_settings.cell_height = 200;
  //note: can change offset to change how tiling displays to fill screen/area
  pWallpaper.grid_settings.row_offset  = 0;
}